{ ************************************************************* }
{ Program:      MIRROR                                          }
{ Authors:      BTE                                             }
{ Date:         03/25/81                                        }
{ Purpose:      impliments the features of the archival MIRROR  }
{                                                               }
{ Revision History:                                             }
{       2.0:    First Shot as adapted from the original     BTE }
{       2.2:    Modified to handle 7 drives                 DP  }
{                                                               }
{ Known problems:                                               }
{    incapable of handling drives larger than 20MB or virtual   }
{    drives larger than 16MB -- due to long integer problems    }
{    (localized to the SetSize/ WhichDrive routines)            }
{ ************************************************************* }
{$S+}

PROGRAM Mirror;

(*$U a2dev1:corvus.library*)
USES SMARTIO, DATES, Driveio, DrUtils;

CONST  manual=false;
       AltSlot=false;          { used during firmware testing }
       RevNum = '2.2';
       maxpass = 6;            { max # of retry attempts }
       notSTART=128;
       rewinding=16;
       WTime=200;              { 1/10 second in a for i:=1 to WTime do; }
       FF=1;
       STOP=3; 
       PLAY=0; 
       REC=7;
       noREC=6;
       REW=2;                  { recorder commands } 
       MirFast = 0; MirNormal = 1; MirCompatible = 2;  { modes }    {2.0}


TYPE 
     Vnametype= string[7];
     
     VTEntry= record
           Vname: Vnametype;
           Vstart,Vsize: integer;
           end;
     
     VTArray= array [0..63] of VTEntry;
     
     ImageName = packed array[1..12] of CHAR;
     
     Image = record
                Name: ImageName;
                Dt  : date;
                Len : INTEGER;
              end;

     Images = array [0..31] of Image;         { Images[0] is "volume" name }
     
     ImageID = record
                  system :packed array [1..16] of char;
                  dt     :packed array [1..16] of char;
                  time   :packed array [1..16] of char;
                  name   :packed array [1..16] of char;
                  comment:packed array [1..80] of char;
                  unused :packed array [1..368] of char;
                 end;
                 
      ImageMode = Mirfast .. Mircompatible;        {2.0}
      
      DrvReality = (virtual,physical);
      
      ops = (aBackup,aRestore,aVerify,aRetry);
     

VAR  MaxDRIVE: INTEGER;  (* # of DRIVES *)
     MaxSEC: array [1..8] of integer;          { drive sizes }
     Drive,ImID : integer;
     ch: char;
     LastErr,BadBlocks,ErrCode : integer;
     XCV     : longstr;
     ToDay   : date;
     AString : STRING;
     Direc   : Images;
     Header  : ImageID;
     ThisSystem:string;
     Debug,
     NoDir,                     { for compatability with old tapes }
     drvtblOK,voltblOK,direcOK,newdate : BOOLEAN;

     NumDrives: integer;        { used by drive unit }
     VirDrives: VDrArray;
     PhysDrives: PDrArray;
     


{   include either  MirrP,  MirrB,  MirrBP    }
{$I MIRRP.TEXT}         { operating system dependent junk }

{$I MIRR0.TEXT }        { low level procedures }
{$I MIRR1.TEXT }        { tape positioning }
{$I MIRR2.TEXT }        { major user interface procedures }


{$P*************************************************************}
{                                                               }
{               Main/ Dispatch                                  }
{                                                               }
{***************************************************************}


  {procedure dispatch;}
  begin
    gotoxy(0,0); crt(eraseol);
    if manual then
      write('Mirror: I(dent B(ckup R(store V(rify Q ? [',RevNum,']:')
     else
      write('Mirror: I(dent B(ckup R(store V(rify L(st reW(nd',
            ' P(rge F(rmat Q ? [',RevNum,']:');
    
    ch:=getbyte;
    crt(eraseall);
    writeln;
    case ch of
      '?': HELP;
      'D': begin                {debug command}
           write('Set Debug Mode? N',chr(8));
           Debug:=(getbyte='Y');
           writeln;
           write('Find present tape position? N',chr(8));
           if getbyte='Y' then
             begin
             WhrAmI(Stop);
             writeln('tape at ID-',XCV.int[2],' record-type: ',XCV.int[4],
                   ' record number-',XCV.int[5]+XCV.int[6]*256,
                   ' of image length-',XCV.int[8]+XCV.int[9]*256);
             end;
           end;
      'W': begin
           direcOK:=false;
           push(REW);
           end;
      'F': if not manual then format;
      'L': if not manual then list;
      'P': if not manual then purge;
      'B': backup;
      'R': restore;
      'I': identify;
      'V': verify;
      'M': writeln(memavail);
     end;
     
  end;
  

begin   {MIRROR}
ioinit;
driveio_init;
drutilsinit;
DrUtilAltSlot:=AltSlot;
FilerDate(Today);
NoDir:=false; direcOK:=false;
drvtblOK:=false;
voltblOK:=false;
Debug:=false;
push(REW);
ImID:=1;                { default for manual mode }
initflags;

repeat dispatch until ch in ['Q','!'];

end.

